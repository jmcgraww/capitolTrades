{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const CongressTrades=()=>{const[inputValue,setInputValue]=useState('');const[congressMember,setCongressMember]=useState('');const[trades,setTrades]=useState([]);const[visibleTrades,setVisibleTrades]=useState({});const[prevVisibleTrades,setPrevVisibleTrades]=useState({});const[error,setError]=useState('');const[dataStructure,setDataStructure]=useState(null);const[searchBarVisible,setSearchBarVisible]=useState(false);const[queryTime,setQueryTime]=useState(null);const[expandedTicker,setExpandedTicker]=useState(null);// Track the currently expanded ticker\nconst expandedRef=useRef(null);useEffect(()=>{scrollToExpandedInfo();},[visibleTrades]);const handleSearch=async()=>{try{const startTime=performance.now();// Start measuring time\nconst response=await axios.get('/search',{params:{term:inputValue,data_structure:dataStructure}});const endTime=performance.now();// End measuring time\nsetQueryTime((endTime-startTime).toFixed(2));// Calculate and set query time\nif(response.data.length>0){setSearchBarVisible(true);fetchTrades(response.data[0]);}else{setTrades([]);setError('Congress person not found.');setCongressMember('');}}catch(error){setError('Error fetching data. Please try again later.');setTrades([]);setCongressMember('');}};const fetchTrades=async name=>{try{const response=await axios.get(\"/trades/\".concat(name),{params:{data_structure:dataStructure}});setTrades(response.data);setCongressMember(name);setError('');}catch(error){setError('Error fetching trades. Please try again later.');setTrades([]);}};const toggleTradeVisibility=ticker=>{setVisibleTrades(prevVisibleTrades=>({...prevVisibleTrades,[ticker]:!prevVisibleTrades[ticker]}));setExpandedTicker(ticker);// Update the expanded ticker\n};const scrollToExpandedInfo=()=>{Object.keys(visibleTrades).forEach(ticker=>{// Check if trade visibility changed from false to true\nif(!prevVisibleTrades[ticker]&&visibleTrades[ticker]){const buttonRef=document.getElementById(\"button-\".concat(ticker));if(buttonRef&&expandedRef.current){const searchBarRect=document.getElementById('search-bar').getBoundingClientRect();const buttonRect=buttonRef.getBoundingClientRect();const windowHeight=window.innerHeight;const buttonTop=buttonRect.top-searchBarRect.height-windowHeight/10;// Check if the button is already above the current viewport\nif(buttonTop>window.pageYOffset){window.scrollTo({top:buttonTop,behavior:'smooth'});}}}});// Update previous visibility state\nsetPrevVisibleTrades(visibleTrades);};const getLastTradeType=ticker=>{const lastTrade=trades[ticker]&&trades[ticker].length>0?trades[ticker][0].trade_type:null;return lastTrade;};const getButtonColor=ticker=>{const lastTradeType=getLastTradeType(ticker);if(lastTradeType==='Purchase'){return'green';// Green color for purchase\n}else if(lastTradeType==='Sale'){return'red';// Red color for sale\n}else{return'#efefef';// Default color\n}};const calculateTotalVolume=trades=>{console.log(\"Trades array:\",trades);// Log the trades array\nlet totalVolume=0;let totalTrades=0;// Counter for the total number of trades\ntrades.forEach(trade=>{const averageAmount=(parseInt(trade.amount[0])+parseInt(trade.amount[1]))/2;// Calculate the average amount\ntotalTrades++;// Increment the total trades counter\nif(trade.trade_type==='purchase'){totalVolume+=averageAmount;// Add the average amount to total volume\n}else if(trade.trade_type==='sale_full'||trade.trade_type=='sale_partial'){totalVolume-=averageAmount;// Subtract the average amount from total volume\n}});if(totalTrades===0)return'0';// Handle division by zero\nreturn totalVolume.toLocaleString();// Return the total volume as localized string\n};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{style:{marginTop:'60px',marginBottom:'30px'},children:\"Capitol Trades\"}),/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',marginBottom:'20px'},children:[!searchBarVisible&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{style:{marginBottom:'20px'},children:\"Would you like to use an Adjacency List or Adjacency Matrix in the backend?\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{style:{fontSize:'20px',padding:'10px 20px',margin:'10px',marginBottom:'10px'},onClick:()=>{setDataStructure('list');setSearchBarVisible(true);},children:\"Use Adjacency List\"}),/*#__PURE__*/_jsx(\"button\",{style:{fontSize:'20px',padding:'10px 20px',margin:'10px',marginBottom:'10px'},onClick:()=>{setDataStructure('matrix');setSearchBarVisible(true);},children:\"Use Adjacency Matrix\"})]})]}),searchBarVisible&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{style:{marginBottom:'20px'},children:\"Enter a congress member:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"search-bar\",type:\"text\",value:inputValue,onChange:e=>setInputValue(e.target.value),style:{fontSize:'20px',padding:'10px',borderRadius:'20px',marginBottom:'20px',textAlign:'center',width:'50%'}}),/*#__PURE__*/_jsx(\"br\",{}),queryTime&&/*#__PURE__*/_jsxs(\"p\",{style:{fontSize:'16px',marginTop:'10px'},children:[\"Query Time: \",queryTime,\" ms\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSearch,style:{fontSize:'20px',padding:'10px 20px',margin:'10px',marginBottom:'20px'},children:\"Search\"})]})]}),error&&/*#__PURE__*/_jsx(\"p\",{children:error}),congressMember&&/*#__PURE__*/_jsxs(\"h2\",{style:{marginLeft:'20px',marginBottom:'20px'},children:[\"List of Stock Trades for \",congressMember]}),/*#__PURE__*/_jsx(\"div\",{style:{display:'grid',gridTemplateColumns:'repeat(3, 1fr)',gap:'20px',marginLeft:'20px',marginRight:'20px'},children:Object.keys(trades).map(ticker=>/*#__PURE__*/_jsxs(\"div\",{style:{position:'relative',marginBottom:'20px'},children:[/*#__PURE__*/_jsxs(\"button\",{id:\"button-\".concat(ticker),onClick:()=>toggleTradeVisibility(ticker),style:{width:'100%',height:'60px',fontSize:'16px',borderRadius:'5px',background:getButtonColor(ticker),border:'none',boxShadow:'0px 2px 5px rgba(0, 0, 0, 0.2)',cursor:'pointer',transition:'transform 0.3s',overflow:'hidden',whiteSpace:'nowrap',textOverflow:'ellipsis'},onMouseEnter:e=>{e.target.style.background='#d9d9d9';},onMouseLeave:e=>{e.target.style.background=getButtonColor(ticker);},children:[ticker,\" | Estimated Volume: \",calculateTotalVolume(trades[ticker])]}),visibleTrades[ticker]&&/*#__PURE__*/_jsx(\"div\",{ref:expandedRef,style:{position:'absolute',top:'calc(100% + 5px)',left:'0',right:'0',background:'#ffffff',boxShadow:'0px 4px 8px rgba(0, 0, 0, 0.25)',padding:'15px',borderRadius:'5px',zIndex:'10'},children:trades[ticker].sort((a,b)=>{const dateA=new Date(a.date);const dateB=new Date(b.date);return dateB-dateA;}).map((trade,idx)=>/*#__PURE__*/_jsx(\"li\",{style:{background:'#f7f7f7',margin:'5px 0',padding:'10px',borderRadius:'5px'},children:/*#__PURE__*/_jsxs(\"div\",{children:[\"Date: \",trade.date,\" | Type: \",trade.trade_type,\" | \",trade.amount.toLocaleString()]})},idx))})]},\"\".concat(ticker,\"-\").concat(visibleTrades[ticker])))})]});};export default CongressTrades;","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CongressTrades","inputValue","setInputValue","congressMember","setCongressMember","trades","setTrades","visibleTrades","setVisibleTrades","prevVisibleTrades","setPrevVisibleTrades","error","setError","dataStructure","setDataStructure","searchBarVisible","setSearchBarVisible","queryTime","setQueryTime","expandedTicker","setExpandedTicker","expandedRef","scrollToExpandedInfo","handleSearch","startTime","performance","now","response","get","params","term","data_structure","endTime","toFixed","data","length","fetchTrades","name","concat","toggleTradeVisibility","ticker","Object","keys","forEach","buttonRef","document","getElementById","current","searchBarRect","getBoundingClientRect","buttonRect","windowHeight","window","innerHeight","buttonTop","top","height","pageYOffset","scrollTo","behavior","getLastTradeType","lastTrade","trade_type","getButtonColor","lastTradeType","calculateTotalVolume","console","log","totalVolume","totalTrades","trade","averageAmount","parseInt","amount","toLocaleString","children","style","marginTop","marginBottom","textAlign","fontSize","padding","margin","onClick","id","type","value","onChange","e","target","borderRadius","width","marginLeft","display","gridTemplateColumns","gap","marginRight","map","position","background","border","boxShadow","cursor","transition","overflow","whiteSpace","textOverflow","onMouseEnter","onMouseLeave","ref","left","right","zIndex","sort","a","b","dateA","Date","date","dateB","idx"],"sources":["/workspaces/capitolTrades/src/components/pages/CongressTrades.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\n\nconst CongressTrades = () => {\n  const [inputValue, setInputValue] = useState('');\n  const [congressMember, setCongressMember] = useState('');\n  const [trades, setTrades] = useState([]);\n  const [visibleTrades, setVisibleTrades] = useState({});\n  const [prevVisibleTrades, setPrevVisibleTrades] = useState({});\n  const [error, setError] = useState('');\n  const [dataStructure, setDataStructure] = useState(null);\n  const [searchBarVisible, setSearchBarVisible] = useState(false);\n  const [queryTime, setQueryTime] = useState(null);\n  const [expandedTicker, setExpandedTicker] = useState(null); // Track the currently expanded ticker\n  const expandedRef = useRef(null);\n\n  useEffect(() => {\n    scrollToExpandedInfo();\n  }, [visibleTrades]);\n\n  const handleSearch = async () => {\n    try {\n      const startTime = performance.now(); // Start measuring time\n      const response = await axios.get('/search', {\n        params: { term: inputValue, data_structure: dataStructure },\n      });\n      const endTime = performance.now(); // End measuring time\n      setQueryTime((endTime - startTime).toFixed(2)); // Calculate and set query time\n      if (response.data.length > 0) {\n        setSearchBarVisible(true);\n        fetchTrades(response.data[0]);\n      } else {\n        setTrades([]);\n        setError('Congress person not found.');\n        setCongressMember('');\n      }\n    } catch (error) {\n      setError('Error fetching data. Please try again later.');\n      setTrades([]);\n      setCongressMember('');\n    }\n  };\n  \n\n  const fetchTrades = async (name) => {\n    try {\n      const response = await axios.get(`/trades/${name}`, {\n        params: { data_structure: dataStructure },\n      });\n      setTrades(response.data);\n      setCongressMember(name);\n      setError('');\n    } catch (error) {\n      setError('Error fetching trades. Please try again later.');\n      setTrades([]);\n    }\n  };\n\n  const toggleTradeVisibility = (ticker) => {\n    setVisibleTrades((prevVisibleTrades) => ({\n      ...prevVisibleTrades,\n      [ticker]: !prevVisibleTrades[ticker],\n    }));\n    setExpandedTicker(ticker); // Update the expanded ticker\n  };\n\n  const scrollToExpandedInfo = () => {\n    Object.keys(visibleTrades).forEach((ticker) => {\n      // Check if trade visibility changed from false to true\n      if (!prevVisibleTrades[ticker] && visibleTrades[ticker]) {\n        const buttonRef = document.getElementById(`button-${ticker}`);\n        if (buttonRef && expandedRef.current) {\n          const searchBarRect = document.getElementById('search-bar').getBoundingClientRect();\n          const buttonRect = buttonRef.getBoundingClientRect();\n          const windowHeight = window.innerHeight;\n          const buttonTop = buttonRect.top - searchBarRect.height - windowHeight / 10;\n          // Check if the button is already above the current viewport\n          if (buttonTop > window.pageYOffset) {\n            window.scrollTo({\n              top: buttonTop,\n              behavior: 'smooth',\n            });\n          }\n        }\n      }\n    });\n    // Update previous visibility state\n    setPrevVisibleTrades(visibleTrades);\n  };\n\n  const getLastTradeType = (ticker) => {\n    const lastTrade = trades[ticker] && trades[ticker].length > 0 ? trades[ticker][0].trade_type : null;\n    return lastTrade;\n  };\n\n  const getButtonColor = (ticker) => {\n    const lastTradeType = getLastTradeType(ticker);\n    if (lastTradeType === 'Purchase') {\n      return 'green'; // Green color for purchase\n    } else if (lastTradeType === 'Sale') {\n      return 'red'; // Red color for sale\n    } else {\n      return '#efefef'; // Default color\n    }\n  };\n\n  const calculateTotalVolume = (trades) => {\n    console.log(\"Trades array:\", trades); // Log the trades array\n    let totalVolume = 0;\n    let totalTrades = 0; // Counter for the total number of trades\n    \n    trades.forEach((trade) => {\n      const averageAmount = (parseInt(trade.amount[0]) + parseInt(trade.amount[1])) / 2; // Calculate the average amount\n      totalTrades++; // Increment the total trades counter\n  \n      if (trade.trade_type === 'purchase') {\n        totalVolume += averageAmount; // Add the average amount to total volume\n      } else if (trade.trade_type === 'sale_full' || trade.trade_type == 'sale_partial') {\n        totalVolume -= averageAmount; // Subtract the average amount from total volume\n      }\n    });\n    \n    if (totalTrades === 0) return '0'; // Handle division by zero\n    \n    return totalVolume.toLocaleString(); // Return the total volume as localized string\n  };\n  \n  \n  return (\n    <div>\n      <h1 style={{ marginTop: '60px', marginBottom: '30px' }}>Capitol Trades</h1>\n      <div style={{ textAlign: 'center', marginBottom: '20px' }}>\n        {!searchBarVisible && (\n          <>\n            <h2 style={{ marginBottom: '20px' }}>Would you like to use an Adjacency List or Adjacency Matrix in the backend?</h2>\n            <div>\n              <button style={{ fontSize: '20px', padding: '10px 20px', margin: '10px', marginBottom: '10px' }} onClick={() => { setDataStructure('list'); setSearchBarVisible(true); }}>\n                Use Adjacency List\n              </button>\n              <button style={{ fontSize: '20px', padding: '10px 20px', margin: '10px', marginBottom: '10px' }} onClick={() => { setDataStructure('matrix'); setSearchBarVisible(true); }}>\n                Use Adjacency Matrix\n              </button>\n            </div>\n          </>\n        )}\n        {searchBarVisible && (\n          <>\n            <h2 style={{ marginBottom: '20px' }}>Enter a congress member:</h2>\n            <input\n              id=\"search-bar\"\n              type=\"text\"\n              value={inputValue}\n              onChange={(e) => setInputValue(e.target.value)}\n              style={{\n                fontSize: '20px',\n                padding: '10px',\n                borderRadius: '20px',\n                marginBottom: '20px',\n                textAlign: 'center',\n                width: '50%',\n              }}\n            />\n            <br />\n            {queryTime && (\n              <p style={{ fontSize: '16px', marginTop: '10px' }}>Query Time: {queryTime} ms</p>\n            )}\n            <button onClick={handleSearch} style={{ fontSize: '20px', padding: '10px 20px', margin: '10px', marginBottom: '20px' }}>\n              Search\n            </button>\n          </>\n        )}\n      </div>\n\n      {error && <p>{error}</p>}\n      {congressMember && (\n        <h2 style={{ marginLeft: '20px', marginBottom: '20px' }}>List of Stock Trades for {congressMember}</h2>\n      )}\n      <div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(3, 1fr)',\n          gap: '20px',\n          marginLeft: '20px',\n          marginRight: '20px',\n        }}\n      >\n        {Object.keys(trades).map((ticker) => (\n          <div\n            key={`${ticker}-${visibleTrades[ticker]}`}\n            style={{\n              position: 'relative',\n              marginBottom: '20px',\n            }}\n          >\n            <button\n              id={`button-${ticker}`}\n              onClick={() => toggleTradeVisibility(ticker)}\n              style={{\n                width: '100%',\n                height: '60px',\n                fontSize: '16px',\n                borderRadius: '5px',\n                background: getButtonColor(ticker),\n                border: 'none',\n                boxShadow: '0px 2px 5px rgba(0, 0, 0, 0.2)',\n                cursor: 'pointer',\n                transition: 'transform 0.3s',\n                overflow: 'hidden',\n                whiteSpace: 'nowrap',\n                textOverflow: 'ellipsis',\n              }}\n              onMouseEnter={(e) => {\n                e.target.style.background = '#d9d9d9';\n              }}\n              onMouseLeave={(e) => {\n                e.target.style.background = getButtonColor(ticker);\n              }}\n            >\n              {ticker} | Estimated Volume: {calculateTotalVolume(trades[ticker])}\n            </button>\n            {visibleTrades[ticker] && (\n              <div\n                ref={expandedRef}\n                style={{\n                  position: 'absolute',\n                  top: 'calc(100% + 5px)',\n                  left: '0',\n                  right: '0',\n                  background: '#ffffff',\n                  boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.25)',\n                  padding: '15px',\n                  borderRadius: '5px',\n                  zIndex: '10',\n                }}\n              >\n                {trades[ticker]\n                  .sort((a, b) => {\n                    const dateA = new Date(a.date);\n                    const dateB = new Date(b.date);\n                    return dateB - dateA;\n                  })\n                  .map((trade, idx) => (\n                    <li\n                      key={idx}\n                      style={{ background: '#f7f7f7', margin: '5px 0', padding: '10px', borderRadius: '5px' }}\n                    >\n                      <div>\n                        Date: {trade.date} | Type: {trade.trade_type} | {trade.amount.toLocaleString()}\n                      </div>\n                    </li>\n                  ))}\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CongressTrades;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}